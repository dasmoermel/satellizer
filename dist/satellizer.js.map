{"version":3,"file":null,"sources":["../src/config.ts","../src/authProvider.ts","../src/shared.ts","../src/utils.ts","../src/local.ts","../src/storage.ts","../src/interceptor.ts","../src/httpProviderConfig.ts","../src/ng1.ts"],"sourcesContent":["export default class Config {\n  static get getConstant() {\n    return new Config();\n  }\n\n  baseUrl = '/';\n  authenticateUrl = '/oauth2/token';\n  revokeUrl = '/oauth2/revoke';\n  tokenName = 'token';\n  tokenPrefix = 'satellizer';\n  tokenHeader = 'Authorization';\n  tokenType = 'Bearer';\n  storageType = 'localStorage';\n  tokenRoot = null;\n  withCredentials = false;\n  httpInterceptor: any = (): boolean => true;\n};\n","import Config from './config';\n\nexport default class AuthProvider {\n  static $inject = ['SatellizerConfig'];\n\n  constructor(private SatellizerConfig: Config) {}\n\n  get baseUrl(): string { return this.SatellizerConfig.baseUrl; }\n  set baseUrl(value) { this.SatellizerConfig.baseUrl = value; }\n\n  get authenticateUrl(): string { return this.SatellizerConfig.authenticateUrl; }\n  set authenticateUrl(value) { this.SatellizerConfig.authenticateUrl = value; }\n\n  get revokeUrl(): string {return this.SatellizerConfig.revokeUrl;}\n  set revokeUrl(value) { this.SatellizerConfig.revokeUrl = value; }\n\n  get tokenRoot(): string { return this.SatellizerConfig.tokenRoot; }\n  set tokenRoot(value) { this.SatellizerConfig.tokenRoot = value; }\n\n  get tokenName(): string { return this.SatellizerConfig.tokenName; }\n  set tokenName(value) { this.SatellizerConfig.tokenName = value; }\n\n  get tokenPrefix(): string { return this.SatellizerConfig.tokenPrefix; }\n  set tokenPrefix(value) { this.SatellizerConfig.tokenPrefix = value; }\n\n  get tokenHeader(): string { return this.SatellizerConfig.tokenHeader; }\n  set tokenHeader(value) { this.SatellizerConfig.tokenHeader = value; }\n\n  get tokenType(): string { return this.SatellizerConfig.tokenType; }\n  set tokenType(value) { this.SatellizerConfig.tokenType = value; }\n\n  get withCredentials(): boolean { return this.SatellizerConfig.withCredentials; }\n  set withCredentials(value) { this.SatellizerConfig.withCredentials = value; }\n\n  get storageType(): string { return this.SatellizerConfig.storageType; }\n  set storageType(value) { this.SatellizerConfig.storageType = value; }\n\n  get httpInterceptor(): boolean { return this.SatellizerConfig.httpInterceptor; }\n  set httpInterceptor(value) {\n    if (typeof value === 'function') {\n      this.SatellizerConfig.httpInterceptor = value;\n    } else {\n      this.SatellizerConfig.httpInterceptor = () => value;\n    }\n  }\n\n  $get(SatellizerShared, SatellizerLocal): any {\n    return {\n      authenticate: (user) => SatellizerLocal.authenticate(user),\n      revoke: () => SatellizerLocal.revoke(),\n      isAuthenticated: () => SatellizerShared.isAuthenticated(),\n      getToken: () => SatellizerShared.getToken(),\n      setToken: (token) => SatellizerShared.setToken({ access_token: token }),\n      removeToken: () => SatellizerShared.removeToken(),\n      setStorageType: (type) => SatellizerShared.setStorageType(type)\n    };\n  }\n}\n\nAuthProvider.prototype.$get.$inject = ['SatellizerShared', 'SatellizerLocal'];\n","import Config from \"./config\";\nimport Storage from \"./storage\";\n\nclass Shared {\n  static $inject = ['$q', '$window', 'SatellizerConfig', 'SatellizerStorage'];\n\n  private prefixedTokenName: string;\n\n  constructor(private $q: angular.IQService,\n              private $window: angular.IWindowService,\n              private SatellizerConfig: Config,\n              private SatellizerStorage: Storage) {\n    const {tokenName, tokenPrefix} = this.SatellizerConfig;\n    this.prefixedTokenName = tokenPrefix ? [tokenPrefix, tokenName].join('_') : tokenName;\n  }\n\n  /**\n   * Get TokenObject from Storage\n   * @returns {any}\n   */\n  getToken(): any {\n    return JSON.parse(this.SatellizerStorage.get(this.prefixedTokenName));\n  }\n\n  /**\n   * Set TokenObject to Storage from Response of httpAuthRequest.\n   * @param response Response from httpAuthRequest\n   */\n  setToken(response): void {\n    if (angular.isObject(response.data)) {\n      this.SatellizerStorage.set(this.prefixedTokenName, JSON.stringify(response.data));\n    }\n  }\n\n  /**\n   * Removes TokenObject from Storage\n   */\n  removeToken(): void {\n    this.SatellizerStorage.remove(this.prefixedTokenName);\n  }\n\n  getTokensFromObject(): any {\n\n    let data = this.getToken();\n    let tokens: string[] = [];\n\n    if (\"access_token\" in data) {\n      tokens.push(data['access_token']);\n    }\n\n    if (\"refresh_token\" in data) {\n      tokens.push(data['refresh_token']);\n    }\n\n    return tokens;\n\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.SatellizerStorage.get(this.prefixedTokenName);\n\n    if (token) {  // Token is present\n      if (token.split('.').length === 3) {  // Token with a valid JWT format XXX.YYY.ZZZ\n        try { // Could be a valid JWT or an access token with the same format\n          const base64Url = token.split('.')[1];\n          const base64 = base64Url.replace('-', '+').replace('_', '/');\n          const exp = JSON.parse(this.$window.atob(base64)).exp;\n          if (typeof exp === 'number') {  // JWT with an optonal expiration claims\n            return Math.round(new Date().getTime() / 1000) < exp;\n          }\n        } catch (e) {\n          return true;  // Pass: Non-JWT token that looks like JWT\n        }\n      }\n      return true;  // Pass: All other tokens\n    }\n    return false; // Fail: No token at all\n  }\n\n  setStorageType(type): void {\n    this.SatellizerConfig.storageType = type;\n  }\n}\n\nexport default Shared;\n","export function joinUrl (baseUrl, url) {\n  if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\n    return url;\n  }\n  let joined = [baseUrl, url].join('/');\n  let normalize = function (str) {\n    return str\n      .replace(/[\\/]+/g, '/')\n      .replace(/\\/\\?/g, '?')\n      .replace(/\\/\\#/g, '#')\n      .replace(/\\:\\//g, '://');\n  };\n  return normalize(joined);\n}\n\nexport function getFullUrlPath (location) {\n  const isHttps = location.protocol === 'https:';\n  return location.protocol + '//' + location.hostname +\n    ':' + (location.port || (isHttps ? '443' : '80')) +\n    (/^\\//.test(location.pathname) ? location.pathname : '/' + location.pathname);\n}\n\nexport function parseQueryString (str) {\n  let obj = {};\n  let key;\n  let value;\n  angular.forEach((str || '').split('&'), (keyValue) => {\n    if (keyValue) {\n      value = keyValue.split('=');\n      key = decodeURIComponent(value[0]);\n      obj[key] = angular.isDefined(value[1]) ? decodeURIComponent(value[1]) : true;\n    }\n  });\n  return obj;\n}\n\nexport function decodeBase64 (str) {\n  let buffer;\n  if (typeof module !== 'undefined' && module.exports) {\n    try {\n      buffer = require('buffer').Buffer;\n    } catch (err) {\n      // noop\n    }\n  }\n\n  let fromCharCode = String.fromCharCode;\n\n  let re_btou = new RegExp([\n    '[\\xC0-\\xDF][\\x80-\\xBF]',\n    '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n    '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n  ].join('|'), 'g');\n\n  let cb_btou = function (cccc) {\n    switch (cccc.length) {\n      case 4:\n        let cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n          | ((0x3f & cccc.charCodeAt(1)) << 12)\n          | ((0x3f & cccc.charCodeAt(2)) << 6)\n          | (0x3f & cccc.charCodeAt(3));\n        let offset = cp - 0x10000;\n        return (fromCharCode((offset >>> 10) + 0xD800)\n        + fromCharCode((offset & 0x3FF) + 0xDC00));\n      case 3:\n        return fromCharCode(\n          ((0x0f & cccc.charCodeAt(0)) << 12)\n          | ((0x3f & cccc.charCodeAt(1)) << 6)\n          | (0x3f & cccc.charCodeAt(2))\n        );\n      default:\n        return fromCharCode(\n          ((0x1f & cccc.charCodeAt(0)) << 6)\n          | (0x3f & cccc.charCodeAt(1))\n        );\n    }\n  };\n\n  let btou = function (b) {\n    return b.replace(re_btou, cb_btou);\n  };\n\n  let _decode = buffer ? function (a) {\n    return (a.constructor === buffer.constructor\n      ? a : new buffer(a, 'base64')).toString();\n  }\n    : function (a) {\n    return btou(atob(a));\n  };\n\n  return _decode(\n    String(str).replace(/[-_]/g, function (m0) {\n      return m0 === '-' ? '+' : '/';\n    })\n      .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n  );\n}\n","import {joinUrl} from \"./utils\";\nimport Config from \"./config\";\nimport Shared from \"./shared\";\n\nclass Local {\n  static $inject = ['$http', 'SatellizerConfig', 'SatellizerShared'];\n\n\n  constructor(private $http: angular.IHttpService,\n              private SatellizerConfig: Config,\n              private SatellizerShared: Shared) {\n  }\n\n  /**\n   * Sends Authentication Request and saves TokenObject in Storage\n   * @param data Given UserData\n   * @returns {IPromise<TResult>}\n   */\n  authenticate(data: Object): angular.IHttpPromise<any> {\n\n    let options: any = {};\n\n    options.url = options.url ? options.url : joinUrl(this.SatellizerConfig.baseUrl, this.SatellizerConfig.authenticateUrl);\n    options.data = data;\n    options.method = 'POST';\n    options.withCredentials = this.SatellizerConfig.withCredentials;\n\n    return this.$http(options).then((response) => {\n      if (response.status == 200) {\n        this.SatellizerShared.setToken(response);\n      }\n      return response;\n    });\n  }\n\n  /**\n   * Send Revokation Request and removes TokenObject from Storage.\n   * @returns {IHttpPromise<T>}\n   */\n  revoke(): angular.IHttpPromise<any> {\n\n    let options: any = {};\n\n    let tokens = {\n      \"token\": this.SatellizerShared.getTokensFromObject(),\n    };\n\n    options.url = joinUrl(this.SatellizerConfig.baseUrl, this.SatellizerConfig.revokeUrl);\n    options.data = tokens;\n    options.method = 'POST';\n    options.withCredentials = this.SatellizerConfig.withCredentials;\n\n    return this.$http(options).then((response) => {\n      if (response.status == 200) {\n        this.SatellizerShared.removeToken();\n      }\n      return response;\n    });\n  }\n}\n\nexport default Local;\n","import Config from './config';\n\nexport default class Storage {\n  static $inject = ['$window', 'SatellizerConfig'];\n\n  private memoryStore: any;\n  private storageType: string;\n\n  constructor(private $window: angular.IHttpService,\n              private SatellizerConfig: Config) {\n    this.memoryStore = {};\n  }\n\n  get(key: string): string {\n    try {\n      return this.$window[this.SatellizerConfig.storageType].getItem(key);\n    } catch (e) {\n      return this.memoryStore[key];\n    }\n  }\n\n  set(key: string, value: string): void {\n    try {\n      this.$window[this.SatellizerConfig.storageType].setItem(key, value);\n    } catch (e) {\n      this.memoryStore[key] = value;\n    }\n  }\n\n  remove(key: string): void {\n    try {\n      this.$window[this.SatellizerConfig.storageType].removeItem(key);\n    } catch (e) {\n      delete this.memoryStore[key];\n    }\n  }\n}\n","import Config from './config';\nimport Shared from './shared';\nimport Storage from './storage';\n\nexport default class Interceptor implements angular.IHttpInterceptor {\n\n  static $inject = ['SatellizerConfig', 'SatellizerShared', 'SatellizerStorage'];\n\n  static Factory(SatellizerConfig: Config, SatellizerShared: Shared, SatellizerStorage: Storage): Interceptor {\n    return new Interceptor(SatellizerConfig, SatellizerShared, SatellizerStorage);\n  }\n\n  constructor(private SatellizerConfig: Config,\n              private SatellizerShared: Shared,\n              private SatellizerStorage: Storage) {\n  }\n\n  request = (config: angular.IRequestConfig): angular.IRequestConfig => {\n    if (config['skipAuthorization']) {\n      return config;\n    }\n\n    if (this.SatellizerShared.isAuthenticated() && this.SatellizerConfig.httpInterceptor()) {\n      const tokenName = this.SatellizerConfig.tokenPrefix ?\n        [this.SatellizerConfig.tokenPrefix, this.SatellizerConfig.tokenName].join('_') : this.SatellizerConfig.tokenName;\n      let token = this.SatellizerStorage.get(tokenName);\n\n      if (this.SatellizerConfig.tokenHeader && this.SatellizerConfig.tokenType) {\n        token = this.SatellizerConfig.tokenType + ' ' + token;\n      }\n\n      config.headers[this.SatellizerConfig.tokenHeader] = token;\n    }\n\n    return config;\n  };\n}\n\nInterceptor.Factory.$inject = ['SatellizerConfig', 'SatellizerShared', 'SatellizerStorage'];","import Interceptor from './interceptor';\n\nexport default class HttpProviderConfig {\n  static $inject = ['$httpProvider'];\n\n  constructor(private $httpProvider: angular.IHttpProvider) {\n    $httpProvider.interceptors.push(Interceptor.Factory);\n  }\n}\n","import Config from './config';\nimport AuthProvider from './authProvider';\nimport Shared from './shared';\nimport Local from './local';\nimport Storage from './storage';\nimport Interceptor from './interceptor';\nimport HttpProviderConfig from './httpProviderConfig';\n\nangular.module('satellizer', [])\n  .provider('$auth', ['SatellizerConfig', (SatellizerConfig) => new AuthProvider(SatellizerConfig)])\n  .constant('SatellizerConfig', Config.getConstant)\n  .service('SatellizerShared', Shared)\n  .service('SatellizerLocal', Local)\n  .service('SatellizerStorage', Storage)\n  .service('SatellizerInterceptor', Interceptor)\n  .config(['$httpProvider', ($httpProvider) => new HttpProviderConfig($httpProvider)]);\n\nexport default 'satellizer';\n\n"],"names":[],"mappings":"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"}